# -*- coding: utf-8 -*-
"""
Created on Sat Jan 25 12:16:03 2025

@author: Andr√©s Cremades Botella

Function to remove commands with the sintax \command{} in latex text.
The commands have to be introduced as \command in the variable words_to_find. 
The output is a modified file adding _mod to the original file name
"""
import numpy as np
from tqdm import tqdm

#%%
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Import the text
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# text_folder   : folder to locate the text file
# text_file     : select the text file in which you want to apply the changes
# words_to_find : commands to find in the latex text example: [\command1,\command2,\command3]
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# EDIT:
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
text_folder   = "."
text_file     = 'input_text.txt'
words_to_find = ["\command1","\command2"]
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#%%
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Read the commands to delete
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
file_name = text_folder+'/'+text_file
for index_word in np.arange(len(words_to_find)):
    word                      = words_to_find[index_word]+"{"
    words_to_find[index_word] = word.replace("\r","\\r")

# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Read the text file
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
with open(file_name, 'r', encoding='utf-8') as file:
    text = file.read()

# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Remove the commands: \command1{ }
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
repeat_all = True
while repeat_all:
    repeat_all = False
    text2      = text.split()
    
    for word_ii in tqdm(np.arange(len(text2))):
        word         = text2[word_ii]
        lenword      = len(words_to_find)
        flag_findend = False
        num_open     = 0
        # ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        # Remove the words in words_to_find
        # ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        for check in words_to_find:
            if check in word:
                text2[word_ii] = word.replace(check,"")
                flag_findend   = True
                break
        # ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        # Remove the end of the command }
        # ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        if flag_findend:
        # ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        # Check after the command word
        # ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
            for word_jj in np.arange(len(text2)-word_ii):
                word3 = text2[word_ii+word_jj]
                # -------------------------------------------------------------------------------------------------------------------------------------------------------------------
                # Enter if } is encountered in a word
                # -------------------------------------------------------------------------------------------------------------------------------------------------------------------
                if "}" in word3:
                    red_char        = 0
                    flag_end_symbol = False
                    # ---------------------------------------------------------------------------------------------------------------------------------------------------------------
                    # Check the characters of the word
                    # ---------------------------------------------------------------------------------------------------------------------------------------------------------------
                    for character_ii in np.arange(len(word3)):
                        character = word3[character_ii]
                        # -----------------------------------------------------------------------------------------------------------------------------------------------------------
                        # Character } is encountered in the word
                        # -----------------------------------------------------------------------------------------------------------------------------------------------------------
                        if character == "}":
                            # -------------------------------------------------------------------------------------------------------------------------------------------------------
                            # If no extra { is opened remove it from the word. Different command depending if it is the last character in the word
                            # -------------------------------------------------------------------------------------------------------------------------------------------------------
                            if num_open == 0:
                                if character_ii == len(word3)-1:
                                    text2[word_ii+word_jj] = text2[word_ii+word_jj][:character_ii-red_char]
                                    red_char              += 1
                                else:
                                    text2[word_ii+word_jj] = text2[word_ii+word_jj][:character_ii-red_char]+text2[word_ii+word_jj][character_ii+1-red_char:]
                                    red_char              += 1
                                # ---------------------------------------------------------------------------------------------------------------------------------------------------
                                # Activate flag end symbol if you have removed it
                                # ---------------------------------------------------------------------------------------------------------------------------------------------------
                                flag_end_symbol = True
                                break
                            # -------------------------------------------------------------------------------------------------------------------------------------------------------
                            # If there was an extra { opened reduce the index of opened {
                            # -------------------------------------------------------------------------------------------------------------------------------------------------------
                            else:
                                num_open -= 1
                        # -----------------------------------------------------------------------------------------------------------------------------------------------------------
                        # If { is encountered inside the same word a } was located increase the number of { opened
                        # -----------------------------------------------------------------------------------------------------------------------------------------------------------
                        elif character == "{":
                            num_open += 1
                    # ---------------------------------------------------------------------------------------------------------------------------------------------------------------
                    # If the end of the command is encountered finish
                    # ---------------------------------------------------------------------------------------------------------------------------------------------------------------
                    if flag_end_symbol:
                        break
                # -------------------------------------------------------------------------------------------------------------------------------------------------------------------
                # If { is encountered in a word increase the number of { opened
                # -------------------------------------------------------------------------------------------------------------------------------------------------------------------
                elif "{" in word3:
                    num_open += 1
      
    # -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    # Write the modified file
    # -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    word_index = 0
    text3      = ""
    
    # -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    # Split the text in different lines using end-of-line characters and save in separate lines in variable text3
    # -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    for part in text.splitlines(keepends=True):  
            line_word_count = len(part.split())   
            text3          += ' '.join(text2[word_index:word_index + line_word_count]) + '\n'
            word_index     += line_word_count        
    
    # -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    # Repeat the process in case there is any remaining command as there was any non-expected combination of characters
    # -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    for check in words_to_find:
        if check in text3:
            text       = text3
            repeat_all = True
            
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Save in file
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
extension = file_name[file_name.rfind("."):]
with open(file_name.replace(extension,"_mod"+extension), "w", encoding="utf-8") as file_mod:
    file_mod.write(text3)